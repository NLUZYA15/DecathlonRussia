apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'realm-android'


def versionMajor = 1
def versionMinor = 0
def versionPatch = 0

def keystorePropertiesFile = rootProject.file("keystore/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "ru.decathlon.motherapp"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        decathlonrussia {
            storeFile rootProject.file(keystoreProperties['decathlonStoreFile'])
            storePassword keystoreProperties['decathlonStorePassword']
            keyAlias keystoreProperties['decathlonKeyAlias']
            keyPassword keystoreProperties['decathlonKeyPassword']
        }
    }

    flavorDimensions "market_version"
    productFlavors {
        decathlonRussia {
            applicationId "ru.decathlon.motherapp"
            signingConfig signingConfigs.decathlonrussia
            manifestPlaceholders = [hostName: "decathlon.ru"]
            resValue "string", "app_account_type", applicationId + ".accountType"
            dimension "market_version"
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix ".${defaultConfig.versionCode}"
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            versionNameSuffix ".${defaultConfig.versionCode}.DEBUG"
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            //generate output apk file name
            outputFileName = new File("${variant.flavorName}-doc-${variant.versionName}.apk")
        }
    }


}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha05'

    //navigation component
    implementation 'android.arch.navigation:navigation-fragment:1.0.0'
    implementation 'android.arch.navigation:navigation-ui:1.0.0'


    //firebase
    implementation 'com.google.firebase:firebase-messaging:17.6.0'
    implementation 'com.google.firebase:firebase-core:16.0.8'


    //dagger
    implementation "com.google.dagger:dagger:2.16"
    implementation "com.google.dagger:dagger-android:2.16"
    implementation "com.google.dagger:dagger-android-support:2.16"
    annotationProcessor "com.google.dagger:dagger-compiler:2.16"
    annotationProcessor "com.google.dagger:dagger-android-processor:2.16"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:2.4.0"
    implementation "com.squareup.retrofit2:converter-gson:2.4.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.4.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"

    //Butter Knife
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

}

